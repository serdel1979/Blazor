@page "/empleados"
@using Blazor.Shared;
@using CurrieTechnologies.Razor.SweetAlert2;
@using Blazor.Client.Services;

@inject SweetAlertService Swal;
@inject IEmpleadoService empleadoService;



<h3>Empleados</h3>

<a class="btn btn-success btn-sm mb-3" href="empleado">Nuevo</a>

<table class="table">
    <thead>
        <tr>
            <th>Nombre</th>
            <th>Departamento</th>
            <th>Sueldo</th>
            <th>Fecha</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if(listEmpleados == null)
        {
            <tr>
                <td colspan="5" align="center">
                    <img style="width:50px" src="https://cdn.pixabay.com/animation/2023/08/11/21/18/21-18-05-265_512.gif" />
                </td>
            </tr>
        }
        else
        {
            @foreach(var item in listEmpleados)
            {
                <tr>
                    <td>
                        @item.NombreCompleto
                    </td>
                </tr>
                <tr>
                    <td>
                        @item.Departamento!.Nombre
                    </td>
                </tr>
                <tr>
                    <td>
                        @item.Sueldo
                    </td>
                </tr>
                <tr>
                    <td>
                        @item.FechaContrato
                    </td>
                </tr>
                <tr>
                       <a class="btn btn-primary btn-sm" href="empleado/@item.Id">
                          <i class="oi oi-pencil"></i>
                       </a>

                       <button type="button" class="btn btn-danger btn-sm ms-2"
                       @onclick="(()=>Eliminar(item.Id))">
                        <i class="oi oi-trash"></i>
                       </button>


                </tr>
            }
        }
    </tbody>
</table>


@code {
    List<EmpleadoDTO>? listEmpleados = null;

    protected override async Task OnInitializedAsync()
    {
        listEmpleados = await empleadoService.GetAll();
    }

    public async Task Eliminar(int Id)
    {
        var resultado = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Eliminar",
                Text = "Seguro de eliminar?",
                Icon = SweetAlertIcon.Question,
                ShowCancelButton = true
            });

        if (resultado.IsConfirmed)
        {
            var eliminado = await empleadoService.Delete(Id);

            if (eliminado)
            {
                listEmpleados = listEmpleados!.FindAll(e => e.Id != Id);
            }
        }
    }

}
